{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Overview","text":"<p>\ud83d\uddbc An image viewer for jetpack compose.</p> <p>\u4e00\u6b3e\u57fa\u4e8e<code>Jetpack Compose</code>\u5f00\u53d1\u7684\u56fe\u7247\u6d4f\u89c8\u5e93\uff0c\u652f\u6301\u8fc7\u6e21\u53d8\u6362\u548c\u8d85\u5927\u56fe\u7247\u7684\u663e\u793a</p> <p>The latest version: </p>"},{"location":"#110-imageviewerscale","title":"\ud83e\udd73 1.1.0 \u5168\u65b0\u7248\u672c\uff5e <code>ImageViewer</code>\u73b0\u5df2\u66f4\u540d\u4e3a<code>Scale</code>","text":""},{"location":"#docs","title":"\ud83d\udcd3 \u5f00\u53d1\u6587\u6863 \ud83d\udc49 DOCS","text":""},{"location":"#changelog","title":"\ud83d\udcdd \u66f4\u65b0\u65e5\u5fd7 \ud83d\udc49 CHANGELOG","text":""},{"location":"#jvziyaoyao","title":"\ud83d\udc68\u200d\ud83d\udcbb \u4ea7\u54c1\u4e0e\u5f00\u6e90 \ud83d\udc49 JVZIYAOYAO","text":""},{"location":"#_1","title":"\ud83c\udf1f \u6848\u4f8b","text":""},{"location":"#rawcamera-github","title":"\ud83d\udcf7 RawCamera \ud83d\udc49 GITHUB","text":""},{"location":"#imagepicker-github","title":"\ud83c\udf06 ImagePicker \ud83d\udc49 GITHUB","text":""},{"location":"#_2","title":"\ud83d\udc4c \u7279\u6027","text":"<ul> <li>\u57fa\u4e8eJetpack Compose\u5f00\u53d1\uff1b</li> <li>\u7b26\u5408\u76f4\u89c9\u7684\u624b\u52bf\u52a8\u6548\uff1b</li> <li>\u652f\u6301\u8d85\u5927\u56fe\u7247\u663e\u793a\uff1b</li> <li>\u63d0\u4f9b\u56fe\u7247\u5217\u8868\u6d4f\u89c8\u7ec4\u4ef6\uff1b</li> <li>\u652f\u6301\u56fe\u7247\u5f39\u51fa\u9884\u89c8\u7ec4\u4ef6\uff1b</li> <li>\u652f\u6301\u56fe\u7247\u5f39\u51fa\u9884\u89c8\u7684\u8fc7\u6e21\u52a8\u753b\uff1b</li> <li>\u652f\u6301\u5b9a\u5236\u5316\u53ef\u6269\u5c55\u6027\u9ad8\uff1b</li> <li>\u4e0d\u4f9d\u8d56\u7b2c\u4e09\u65b9\u56fe\u7247\u5e93\uff1b</li> </ul>"},{"location":"#_3","title":"\ud83e\uddd0 \u9884\u89c8","text":""},{"location":"#api","title":"\ud83d\udcd3 API","text":"<p>\ud83d\udcbd \u63a5\u53e3\u6587\u6863 \ud83d\udc49 API REFERENCE</p>"},{"location":"#_4","title":"\ud83d\udc53 \u793a\u4f8b","text":"<p>\ud83d\udc4b \u793a\u4f8b\u4ee3\u7801\u8bf7\u53c2\u8003 \ud83d\udc49 SAMPLE</p>"},{"location":"#_5","title":"\ud83d\uded2 \u5f15\u5165","text":"<p>Scale is available on <code>mavenCentral()</code></p> <pre><code>// \u4f7f\u7528MavenCentral\u4ed3\u5e93\nrepositories {\n    mavenCentral()\n}\n\nval version = \"1.1.0-alpha.5\"\n// \u56fe\u7247\u6d4f\u89c8\u5e93\nimplementation(\"com.jvziyaoyao.scale:image-viewer:$version\")\n// \u5927\u578b\u56fe\u7247\u652f\u6301\nimplementation(\"com.jvziyaoyao.scale:sampling-decoder:$version\")\n</code></pre>"},{"location":"#_6","title":"\ud83d\udef5 \u4f7f\u7528\u65b9\u5f0f","text":""},{"location":"#1","title":"1\ufe0f\u20e3 \u7f29\u653e\u7ec4\u4ef6","text":"<pre><code>val painter = painterResource(id = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nZoomableView(state = state) {\n    Image(\n        modifier = Modifier.fillMaxSize(), // \u8fd9\u91cc\u8bf7\u52a1\u5fc5\u8981\u5145\u6ee1\u6574\u4e2a\u56fe\u5c42\n        painter = painter,\n        contentDescription = null,\n    )\n}\n</code></pre>"},{"location":"#2","title":"2\ufe0f\u20e3 \u67e5\u770b\u56fe\u7247","text":"<pre><code>val scope = rememberCoroutineScope()\nval state = rememberZoomableState()\nImageViewer(\n    state = state,\n    model = painterResource(id = R.drawable.light_02),\n    modifier = Modifier.fillMaxSize(),\n    detectGesture = ZoomableGestureScope(onDoubleTap = {\n        // \u53cc\u51fb\u653e\u5927\u7f29\u5c0f\n        scope.launch {\n            state.toggleScale(it)\n        }\n    })\n)\n</code></pre>"},{"location":"#3","title":"3\ufe0f\u20e3 \u52a0\u8f7d\u8d85\u5927\u56fe","text":"<p>\u6dfb\u52a0<code>SamplingDecoder</code>\u4f9d\u8d56\u652f\u6301\uff1a</p> <pre><code>implementation(\"com.jvziyaoyao.scale:sampling-decoder:$version\")\n</code></pre> <p>\u203c \u4ec5\u5728<code>model</code>\u7c7b\u578b\u4e3a<code>SamplingDecoder</code>\u624d\u4f1a\u88ab\u5f53\u505a\u5927\u56fe\u8fdb\u884c\u52a0\u8f7d</p> <pre><code>val context = LocalContext.current\nval scope = rememberCoroutineScope()\nval inputStream = remember { context.assets.open(\"a350.jpg\") }\nval (samplingDecoder) = rememberSamplingDecoder(inputStream = inputStream)\nif (samplingDecoder != null) {\n    val state = rememberZoomableState(\n        contentSize = samplingDecoder.intrinsicSize\n    )\n    ImageViewer(\n        model = samplingDecoder,\n        state = state,\n        processor = ModelProcessor(samplingProcessorPair),\n    )\n}\n</code></pre>"},{"location":"#4","title":"4\ufe0f\u20e3 \u56fe\u7247\u5217\u8868\u6d4f\u89c8","text":"<pre><code>val images = remember {\n    mutableStateListOf(\n        R.drawable.light_01,\n        R.drawable.light_02,\n    )\n}\nImagePager(\n    modifier = Modifier.fillMaxSize(),\n    pagerState = rememberZoomablePagerState { images.size },\n    imageLoader = { index -&gt;\n        val painter = painterResource(images[index])\n        return@ImagePager Pair(painter, painter.intrinsicSize)\n    },\n)\n</code></pre>"},{"location":"#5","title":"5\ufe0f\u20e3 \u56fe\u7247\u5f39\u51fa\u9884\u89c8","text":"<pre><code>val images = remember {\n  listOf(\n    R.drawable.img_01,\n    R.drawable.img_02,\n  )\n}\nval previewerState = rememberPreviewerState(pageCount = { images.size })\nval scope = rememberCoroutineScope()\nImagePreviewer(\n    state = previewerState,\n    detectGesture = PagerGestureScope(onTap = {\n        scope.launch {\n            // \u5173\u95ed\u9884\u89c8\u7ec4\u4ef6\n            previewerState.close()\n        }\n    }),\n    imageLoader = { index -&gt;\n        val painter = painterResource(id = images[index])\n        Pair(painter, painter.intrinsicSize)\n    }\n)\n\n// \u663e\u793a\u9884\u89c8\u7ec4\u4ef6\npreviewerState.open()\n</code></pre>"},{"location":"#6","title":"6\ufe0f\u20e3 \u56fe\u7247\u5f39\u51fa\u9884\u89c8\uff08\u5e26\u8f6c\u6362\u6548\u679c\uff09","text":"<pre><code>val images = remember {\n    listOf(\n        // \u4f9d\u6b21\u58f0\u660e\u56fe\u7247\u7684key\u3001\u7f29\u7565\u56fe\u3001\u539f\u56fe\uff08\u5b9e\u9645\u60c5\u51b5\u6309\u5b9e\u9645\u60c5\u51b5\u6765\uff0c\u8fd9\u91cc\u53ea\u662f\u793a\u4f8b\uff09\n        Triple(\"001\", R.drawable.thumb_01, R.drawable.img_01),\n        Triple(\"002\", R.drawable.thumb_02, R.drawable.img_02),\n    )\n}\n// \u4e3a\u7ec4\u4ef6\u63d0\u4f9b\u83b7\u53d6\u6570\u636e\u957f\u5ea6\u548c\u83b7\u53d6key\u7684\u65b9\u6cd5\nval previewerState = rememberPreviewerState(\n    pageCount = { images.size },\n    getKey = { images[it].first }\n)\n// \u663e\u793a\u7f29\u7565\u56fe\u5c0f\u56fe\u7684\u793a\u4f8b\u4ee3\u7801\nval index = 1\nval scope = rememberCoroutineScope()\nTransformImageView(\n    modifier = Modifier\n        .size(120.dp)\n        .clickable {\n            scope.launch {\n                // \u70b9\u51fb\u4e8b\u4ef6\u89e6\u53d1\u52a8\u6548\n                previewerState.enterTransform(index)\n            }\n        },\n    imageLoader = {\n        val key = images[index].first\n        val imageDrawableId = images[index].second\n        val painter = painterResource(id = imageDrawableId) // \u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u7f29\u7565\u56fe\n        // \u5fc5\u987b\u4f9d\u6b21\u8fd4\u56dekey\u3001\u56fe\u7247\u6570\u636e\u3001\u56fe\u7247\u7684\u5c3a\u5bf8\n        Triple(key, painter, painter.intrinsicSize)\n    },\n    transformState = previewerState,\n)\n// \u8fd9\u91cc\u58f0\u660e\u56fe\u7247\u9884\u89c8\u7ec4\u4ef6\nImagePreviewer(\n    state = previewerState,\n    detectGesture = PagerGestureScope(onTap = {\n        scope.launch {\n            // \u70b9\u51fb\u754c\u9762\u540e\u5173\u95ed\u7ec4\u4ef6\n            previewerState.exitTransform()\n        }\n    }),\n    imageLoader = {\n        val painter = painterResource(id = images[it].third) // \u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u539f\u56fe\n        // \u8fd9\u91cc\u5fc5\u987b\u4f9d\u6b21\u8fd4\u56de\u56fe\u7247\u6570\u636e\u3001\u56fe\u7247\u7684\u5c3a\u5bf8\n        return@ImagePreviewer Pair(painter, painter.intrinsicSize)\n    }\n)\n</code></pre>"},{"location":"#_7","title":"\ud83d\udd75\ufe0f\u200d\u2640\ufe0f \u5f00\u6e90\u8bb8\u53ef","text":"<p>Copyright 2022 jvziyaoyao</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"change_log/","title":"Change Log","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"change_log/#110-alpha5-aug-15-2024","title":"1.1.0-alpha.5 (Aug 15, 2024)","text":"<ul> <li>Feat: \u6839\u636e\u5f53\u524d\u73af\u5883\u83b7\u53d6transformItemStateMap;</li> <li>Feat: Pager\u3001ImagePager\u589e\u52a0\u662f\u5426\u5141\u8bb8\u6eda\u52a8\u7684\u53c2\u6570;</li> <li>Feat: \u9650\u5236\u52a8\u753b\u8fdb\u884c\u65f6\u9875\u9762\u6eda\u52a8\uff1b</li> <li>Fix: \u4fee\u590danimating\u72b6\u6001\u9700\u7b49\u56fe\u7247\u52a0\u8f7d\u5b8c\u624d\u6807\u8bb0\u7ed3\u675f\u7684\u95ee\u9898\uff1b</li> <li>Fix: \u4fee\u590dopenTransform\u8fc7\u7a0b\u4e2d\u5076\u53d1\u5d29\u6e83\u7684\u95ee\u9898\uff1b</li> <li>Fix: \u4fee\u590d\u9875\u9762\u5feb\u901f\u5207\u6362\u5bfc\u81f4\u56fe\u7247\u4e0d\u663e\u793a\u7684\u95ee\u9898\uff1b</li> </ul>"},{"location":"change_log/#110-alpha4-jun-23-2024","title":"1.1.0-alpha.4 (Jun 23, 2024)","text":"<ul> <li>Fix: \u4fee\u590dPopupPreviewer\u663e\u793a\u4e0e\u5173\u95ed\u5b8c\u6210\u72b6\u6001\u4e0d\u6b63\u786e\u7684\u95ee\u9898\uff1b</li> </ul>"},{"location":"change_log/#110-alpha3-jun-14-2024","title":"1.1.0-alpha.3 (Jun 14, 2024)","text":"<ul> <li>Fix: Compose\u56de\u9000\u5230\u7a33\u5b9a\u7248\u672c1.6.8\uff1b</li> </ul>"},{"location":"change_log/#110-alpha2-jun-9-2024","title":"1.1.0-alpha.2 (Jun 9, 2024)","text":"<ul> <li>Feat: \u53d1\u5e03\u5230MavenCentral\uff1b</li> <li>Feat: \u589e\u52a0ModelProcessor;</li> <li>Feat: ImageDecoder\u3001ImageCanvas\u66f4\u540d\u4e3aSamplingDecoder\u3001SamplingCanvas;</li> <li>Feat: \u65b0\u589e\u4f7f\u7528\u6587\u6863 \u3001API\u6587\u6863;</li> <li>Feat: \u66f4\u6362\u5f00\u6e90\u534f\u8bae\u4e3aApache2.0;</li> <li>Fix: \u4fee\u590denterTransform\u540eclose\u5c0f\u56fe\u672a\u663e\u793a\u7684\u95ee\u9898;</li> <li>Fix: \u4fee\u590dZoomablePager\u4e2dstate\u4e0e\u9875\u7801\u4e0d\u5339\u914d\u7684\u95ee\u9898;</li> <li>Fix: \u4fee\u590dTransformPreviewer\u5728\u7f29\u653e\u7387\u5927\u4e8e1\u65f6\u5173\u95ed\u52a8\u753b\u9519\u4e71\u7684\u95ee\u9898;</li> <li>Fix: \u5c06Zoomable\u6700\u5927\u7f29\u653e\u6bd4\u8c03\u6574\u56de4;</li> </ul>"},{"location":"change_log/#110-alpha1-may-25-2024","title":"1.1.0-alpha.1 (May 25, 2024)","text":"<ul> <li>Feat: \u5f03\u7528com.origeek.imageViewer\uff1b</li> <li>Feat: \u91cd\u6784ImageViewer\uff1b</li> <li>Feat: \u91cd\u6784ImageGallery\u4e3aImagePager\uff1b</li> <li>Feat: \u91cd\u6784ImagePreviewer\uff1b</li> <li>Feat: \u65b0\u589eZoomableView\uff1b</li> <li>Feat: \u65b0\u589eZoomablePager\uff1b</li> <li>Feat: \u65b0\u589ePreviewer\uff1b</li> </ul>"},{"location":"change_log/#102-alpha8-dec-1-2023","title":"1.0.2-alpha.8 (Dec 1, 2023)","text":"<ul> <li>Feat: galleryState\u6dfb\u52a0pageCount\uff1b</li> </ul>"},{"location":"change_log/#102-alpha6-oct-8-2023","title":"1.0.2-alpha.6 (Oct 8, 2023)","text":"<ul> <li>Feat: \u652f\u6301\u4e0a\u4e0b\u6ed1\u624b\u52bf\u5173\u95ed\u56fe\u7247\u9884\u89c8\uff1b</li> </ul>"},{"location":"change_log/#102-alpha5-aug-18-2023","title":"1.0.2-alpha.5 (Aug 18, 2023)","text":"<ul> <li>Feat: \u9002\u914d\u5230\u9ad8\u7248\u672c\u7684HorizontalPager\uff1b</li> </ul>"},{"location":"change_log/#102-alpha4-jun-19-2023","title":"1.0.2-alpha.4 (Jun 19, 2023)","text":"<ul> <li>Fix: \u4fee\u590dimageDecoder release\u4e4b\u540e\u83b7\u53d6\u957f\u5bbd\u5bfc\u81f4\u5d29\u6e83\u7684\u95ee\u9898\uff1b</li> <li>Fix: \u89e3\u51b3TransformItem\u5728LazyList\u4e2d\u4e0d\u53ca\u65f6\u5237\u65b0\u7684\u95ee\u9898\uff1b</li> <li>Feat: \u652f\u6301\u5927\u56fe\u8fdb\u884c\u56fe\u7247\u65cb\u8f6c\uff1b</li> <li>Feat: \u91cd\u6784ComposeModel\u90e8\u5206\u4ee5\u652f\u6301\u624b\u52bf\u64cd\u4f5c\uff1b</li> </ul>"},{"location":"change_log/#102-alpha3-may-12-2023","title":"1.0.2-alpha.3 (May 12, 2023)","text":"<ul> <li>Fix: \u79fb\u9664TransformImageView\u4e2d\u7684movable\uff0c\u63d0\u9ad8\u6eda\u52a8\u6027\u80fd\uff1b</li> <li>Feat: Pager\u7ec4\u4ef6\u66f4\u65b0\u5230\u5b98\u65b9\u7684Pager\uff1b</li> </ul>"},{"location":"change_log/#102-alpha2-jan-11-2023","title":"1.0.2-alpha.2 (Jan 11, 2023)","text":"<ul> <li>Fix: OrigeekUI\u5207\u6362\u5230\u53d1\u5e03\u7248\u672c1.0.1-alpha.1</li> </ul>"},{"location":"change_log/#102-alpha1-jan-10-2023","title":"1.0.2-alpha.1 (Jan 10, 2023)","text":"<ul> <li>Feat: \u652f\u6301transform\u52a8\u753b\u6548\u679c</li> <li>Feat: \u652f\u6301viewer\u4e0b\u62c9\u5173\u95ed</li> <li>Feat: viewer\u652f\u6301placeholder</li> <li>Feat: \u5bf9\u81ea\u5b9a\u4e49\u52a8\u753b\u66f2\u7ebf\u63d0\u4f9b\u66f4\u5b8c\u5584\u7684\u652f\u6301</li> <li>Feat: Canvas\u5927\u56fe\u7ec4\u4ef6\u589e\u52a0\u6de1\u5165\u6de1\u51fa\u6548\u679c</li> <li>Fix: \u96c6\u6210Viewer\u65f6\u4e0d\u9700\u8981\u989d\u5916\u96c6\u6210Pager</li> <li>Fix: \u4f18\u5316\u5404\u7ec4\u4ef6\u7684\u53c2\u6570\u914d\u7f6e\uff0c\u63d0\u9ad8\u4ee3\u7801\u7b80\u6d01\u5ea6</li> <li>Fix: \u4fee\u590d\u5927\u56fe\u9884\u89c8\u65f6\u5361\u987f\u7684\u95ee\u9898</li> <li>Fix: \u4fee\u590d\u5404\u7ec4\u4ef6\u65cb\u8f6c\u5c4f\u5e55\u65f6\u72b6\u6001\u4e22\u5931\u7684\u95ee\u9898</li> </ul>"},{"location":"change_log/#101-alpha3-oct-5-2022","title":"1.0.1-alpha.3 (Oct 5, 2022)","text":"<ul> <li>Fix crash caused by screen orientationn changed (#7)</li> </ul>"},{"location":"change_log/#101-alpha2-jun-23-2022","title":"1.0.1-alpha.2 (Jun 23, 2022)","text":"<ul> <li>Create a sample for this library</li> </ul>"},{"location":"change_log/#101-alpha1","title":"1.0.1-alpha.1","text":"<ul> <li>Create this repository and release the first version</li> </ul>"},{"location":"getting_started/","title":"Getting Started","text":""},{"location":"getting_started/#artifacts","title":"\ud83d\udce6 Artifacts","text":"<p><code>Scale</code>\u4f7f\u7528<code>mavenCentral()</code>\u8fdb\u884c\u5206\u53d1\uff0c\u5305\u542b\u4ee5\u4e0b\u56db\u4e2a\u6a21\u5757\uff1a</p> <ul> <li><code>com.jvziyaoyao.scale:image-viewer</code> \u63d0\u4f9b\u4e86\u56fe\u7247\u653e\u5927\u7f29\u5c0f\u3001\u5217\u8868\u6d4f\u89c8\u3001\u5f39\u51fa\u9884\u89c8\u7ec4\u4ef6\u548c\u52a8\u6548\u7684\u56fe\u7247\u6d4f\u89c8\u5e93\uff0c\u5f00\u7bb1\u5373\u7528</li> <li><code>com.jvziyaoyao.scale:zoomable-view</code> <code>ImageViewer</code>\u7684\u57fa\u7840\u5e93\uff0c\u5305\u542b<code>ZoomableView</code>\u3001<code>ZoomablePager</code>\u3001<code>Previewer</code>\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u6269\u5c55\u6027</li> <li><code>com.jvziyaoyao.scale:sampling-decoder</code> \u63d0\u4f9b\u4e86\u5bf9\u5927\u578b\u56fe\u7247\u8fdb\u884c\u4e8c\u6b21\u91c7\u6837\u663e\u793a\u7684\u652f\u6301</li> <li><code>com.jvziyaoyao.scale:image-viewer-classic</code> \u8001\u7248\u672c<code>ImageViewer</code></li> </ul>"},{"location":"getting_started/#imageviewer","title":"\ud83d\uddbc\ufe0f ImageViewer","text":"<p>\u5bf9\u4e00\u5f20\u56fe\u7247\u8fdb\u884c\u653e\u5927\u7f29\u5c0f\uff1a</p> <pre><code>val painter = painterResource(id = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nImageViewer(model = painter, state = state)\n</code></pre>"},{"location":"getting_started/#zoomableview","title":"\ud83d\udd0e ZoomableView","text":"<p>\u5bf9\u4efb\u610f\u4e00\u4e2aComposable\u8fdb\u884c\u653e\u5927\u7f29\u5c0f\uff1a</p> <pre><code>val painter = painterResource(id = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nZoomableView(state = state) {\n    Image(\n        modifier = Modifier.fillMaxSize(), // \u8fd9\u91cc\u8bf7\u52a1\u5fc5\u8981\u5145\u6ee1\u6574\u4e2a\u56fe\u5c42\n        painter = painter,\n        contentDescription = null,\n    )\n}\n</code></pre>"},{"location":"getting_started/#samplingdecoder","title":"\ud83d\udcbd SamplingDecoder","text":"<p>\u5bf9\u5927\u578b\u56fe\u7247\u8fdb\u884c\u4e8c\u6b21\u91c7\u6837\uff1a</p> <pre><code>val context = LocalContext.current\nval inputStream = remember { context.assets.open(\"a350.jpg\") }\nval (samplingDecoder) = rememberSamplingDecoder(inputStream = inputStream)\nif (samplingDecoder != null) {\n    val state = rememberZoomableState(\n        contentSize = samplingDecoder.intrinsicSize\n    )\n    ImageViewer(\n        model = samplingDecoder,\n        state = state,\n        processor = ModelProcessor(samplingProcessorPair)\n    )\n}\n</code></pre>"},{"location":"getting_started/#imagepager","title":"\ud83c\udf9e\ufe0f ImagePager","text":"<p>\u5c55\u793a\u56fe\u7247\u5217\u8868\uff1a</p> <pre><code>val images = remember {\n    mutableStateListOf(R.drawable.light_01, R.drawable.light_02)\n}\nval pagerState = rememberZoomablePagerState { images.size }\nImagePager(\n    pagerState = pagerState,\n    imageLoader = { page -&gt;\n        val painter = painterResource(id = images[page])\n        Pair(painter, painter.intrinsicSize)\n    }\n)\n</code></pre>"},{"location":"getting_started/#imagepreviewer","title":"\ud83d\udcd6 ImagePreviewer","text":"<p>\u56fe\u7247\u5f39\u51fa\u9884\u89c8\uff1a</p> <pre><code>val images = remember {\n    mutableStateListOf(\n        \"https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF\",\n        \"https://t7.baidu.com/it/u=4198287529,2774471735&amp;fm=193&amp;f=GIF\",\n    )\n}\nval state = rememberPreviewerState(pageCount = { images.size }) { images[it] }\nImagePreviewer(\n    state = state,\n    imageLoader = { page -&gt;\n        val painter = rememberAsyncImagePainter(model = images[page])\n        Pair(painter, painter.intrinsicSize)\n    }\n)\n\n// \u5c55\u5f00\nstate.open()\n// \u5173\u95ed\nstate.close()\n</code></pre> <p>\u652f\u6301\u8fc7\u6e21\u52a8\u753b\uff1a</p> <pre><code>Row {\n    images.forEachIndexed { index, url -&gt;\n        TransformImageView(\n            modifier = Modifier\n                .size(120.dp)\n                .clickable {\n                    scope.launch {\n                        state.enterTransform(index)\n                    }\n                },\n            imageLoader = {\n                val painter = rememberAsyncImagePainter(model = url)\n                Triple(url, painter, painter.intrinsicSize)\n            },\n            transformState = state,\n        )\n    }\n}\n</code></pre>"},{"location":"image_pager/","title":"ImagePager","text":"<p><code>ImagePager</code>\u662f\u4e00\u4e2a\u5c55\u793a\u56fe\u7247\u5217\u8868\u7684\u7ec4\u4ef6</p>"},{"location":"image_pager/#_1","title":"\ud83e\udd43 \u7b80\u5355\u4f7f\u7528","text":"<pre><code>val images = remember {\n    mutableStateListOf(R.drawable.light_01, R.drawable.light_02)\n}\nval pagerState = rememberZoomablePagerState { images.size }\nImagePager(\n    pagerState = pagerState,\n    imageLoader = { page -&gt;\n        val painter = painterResource(id = images[page])\n        Pair(painter, painter.intrinsicSize)\n    }\n)\n</code></pre>"},{"location":"image_pager/#coil","title":"\ud83c\udf77 \u7ed3\u5408Coil\u4f7f\u7528","text":"<pre><code>val images = remember {\n    mutableStateListOf(\n        \"https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF\",\n        \"https://t7.baidu.com/it/u=4198287529,2774471735&amp;fm=193&amp;f=GIF\",\n    )\n}\nval pagerState = rememberZoomablePagerState { images.size }\nImagePager(\n    pagerState = pagerState,\n    imageLoader = { page -&gt;\n        val painter = rememberAsyncImagePainter(model = images[page])\n        Pair(painter, painter.intrinsicSize)\n    }\n)\n</code></pre>"},{"location":"image_pager/#proceedpresentation","title":"\ud83e\udd42 ProceedPresentation","text":"<p>\u5728<code>imageLoader</code>\u4e2d\uff0c\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a<code>Pair&lt;Any?, Size?&gt;</code>\u7c7b\u578b\u7684\u6570\u636e\uff0c\u7b2c\u4e00\u4e2a\u662f\u56fe\u7247\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u56fe\u7247\u7684\u56fa\u6709\u5927\u5c0f\uff0c\u7ec4\u4ef6\u4f1a\u6839\u636e\u4e24\u4e2a\u6570\u636e\u7684\u72b6\u6001\u6765\u5224\u65ad\u662f\u663e\u793a\u56fe\u7247\u8fd8\u662f<code>loading</code>\uff0c\u8fd9\u4e2a\u903b\u8f91\u53ef\u4ee5\u901a\u8fc7\u590d\u5199<code>proceedPresentation</code>\u6765\u4fee\u6539</p> <pre><code>// \u58f0\u660e\u4e00\u4e2aProceedPresentation\nval myProceedPresentation: ProceedPresentation =\n    { model, size, processor, imageLoading -&gt;\n        if (model != null &amp;&amp; model is AnyComposable &amp;&amp; size == null) {\n            model.composable.invoke()\n            true\n        } else if (model != null &amp;&amp; size != null) {\n            ZoomablePolicy(intrinsicSize = size) {\n                processor.Deploy(model = model, state = it)\n            }\n            size.isSpecified\n        } else {\n            imageLoading?.invoke()\n            false\n        }\n    }\n\n// \u8bbe\u7f6e\u53c2\u6570proceedPresentation\nImagePager(\n    proceedPresentation = myProceedPresentation\n)\n</code></pre>"},{"location":"image_pager/#loading","title":"\ud83c\udf78 \u81ea\u5b9a\u4e49loading","text":"<pre><code>ImagePager(\n    imageLoading = {\n        Box(modifier = Modifier.fillMaxSize()) {\n            CircularProgressIndicator(\n                modifier = Modifier.align(Alignment.Center),\n                color = Color.Blue,\n            )\n        }\n    }\n)\n</code></pre>"},{"location":"image_pager/#_2","title":"\ud83c\udf79 \u9875\u9762\u81ea\u5b9a\u4e49","text":"<pre><code>ImagePager(\n    pageDecoration = { page, innerPage -&gt;\n        Box(modifier = Modifier.background(Color.LightGray)) {\n            innerPage.invoke()\n\n            // \u8bbe\u7f6e\u6bcf\u4e00\u9875\u7684\u524d\u666f\u56fe\u5c42\n            Box(\n                modifier = Modifier\n                    .padding(bottom = 20.dp)\n                    .clip(RoundedCornerShape(8.dp))\n                    .background(Color.White)\n                    .padding(8.dp)\n                    .align(Alignment.BottomCenter),\n            ) {\n                Text(text = \"${page + 1}/${images.size}\")\n            }\n        }\n    }\n)\n</code></pre>"},{"location":"image_pager/#_3","title":"\ud83c\udf76 \u7c7b\u578b\u62d3\u5c55","text":"<p><code>ImagePager</code>\u53ef\u4ee5\u901a\u8fc7<code>ModelProcessor</code>\u589e\u52a0<code>model</code>\u652f\u6301\u7684\u7c7b\u578b\uff0c\u53c2\u8003\u6587\u6863\uff1a<code>ImageViewer \u7c7b\u578b\u62d3\u5c55</code></p>"},{"location":"image_pager/#_4","title":"\ud83e\uddc9 \u624b\u52bf\u56de\u8c03","text":"<p>ImagePager\u624b\u52bf\u76d1\u542c\u4e0eZoomablePager\u4e00\u6837\uff0c\u4f7f\u7528PagerGestureScope\uff0c\u53c2\u8003\u6587\u6863\uff1a<code>ZoomablePager PagerGestureScope</code></p>"},{"location":"image_pager/#_5","title":"\ud83e\udd5b \u72b6\u6001\u63a7\u5236","text":"<p>ImagePager\u901a\u8fc7ZoomablePagerState\u8fdb\u884c\u72b6\u6001\u63a7\u5236\uff0c\u8bf7\u53c2\u8003\u6587\u6863\uff1a<code>ZoomablePager ZoomablePagerState</code></p>"},{"location":"image_previewer/","title":"ImagePreviewer","text":"<p>\u901a\u8fc7<code>ImagePreviewer</code>\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5b9e\u73b0\u4e00\u4e2a\u7c7b\u4f3c\u5fae\u4fe1\u670b\u53cb\u5708\u653e\u5927\u67e5\u770b\u56fe\u7247\u7684\u7ec4\u4ef6</p>"},{"location":"image_previewer/#_1","title":"\ud83c\udf2d \u57fa\u672c\u7528\u6cd5","text":"<pre><code>// \u51c6\u5907\u4e00\u4e2a\u56fe\u7247\u5217\u8868\nval images = remember {\n    mutableStateListOf(\n        \"https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF\",\n        \"https://t7.baidu.com/it/u=4198287529,2774471735&amp;fm=193&amp;f=GIF\",\n    )\n}\n// \u58f0\u660e\u4e00\u4e2aPreviewerState\nval state = rememberPreviewerState(pageCount = { images.size }) { images[it] }\n// \u521b\u5efa\u4e00\u4e2aImagePreviewer\nImagePreviewer(\n    state = state,\n    imageLoader = { page -&gt;\n        val painter = rememberAsyncImagePainter(model = images[page])\n        Pair(painter, painter.intrinsicSize)\n    }\n)\n\n// \u5c55\u5f00\nstate.open()\n// \u5173\u95ed\nstate.close()\n</code></pre>"},{"location":"image_previewer/#_2","title":"\ud83c\udf54 \u8fc7\u6e21\u52a8\u6548","text":"<p>\u4f7f\u7528<code>TransformImageView</code>\u66ff\u4ee3<code>Image</code>\uff0c\u70b9\u51fb\u56fe\u7247\uff0c\u56fe\u7247\u653e\u5927\u5e76\u8fdb\u5165\u5230\u9884\u89c8\u5217\u8868</p> <pre><code>Box(modifier = Modifier.fillMaxSize()) {\n    Row(\n        modifier = Modifier.align(Alignment.Center),\n        horizontalArrangement = Arrangement.spacedBy(8.dp)\n    ) {\n        images.forEachIndexed { index, url -&gt;\n            TransformImageView(\n                modifier = Modifier\n                    .size(120.dp)\n                    .clickable {\n                        scope.launch {\n                            state.enterTransform(index)\n                        }\n                    },\n                imageLoader = {\n                    val painter = rememberAsyncImagePainter(model = url)\n                    Triple(url, painter, painter.intrinsicSize)\n                },\n                transformState = state,\n            )\n        }\n    }\n}\n</code></pre> <p>\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a\uff0c<code>TransformImageView</code>\u7684<code>imageLoader</code>\u9700\u8981\u8fd4\u56de\u4e00\u4e2a<code>Triple</code>\u7c7b\u578b\u7684\u6570\u636e\uff0c \u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a<code>key</code>\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u663e\u793a\u7684\u56fe\u7247\u6570\u636e\uff0c\u7b2c\u4e09\u4e2a\u4e3a\u56fe\u7247\u7684\u56fa\u6709\u5927\u5c0f</p> <p>\u26a0\ufe0f\u203c\ufe0f \u6ce8\u610f<code>Key</code>\u4e0e<code>Index</code>\u7684\u4e00\u81f4\u6027</p> <pre><code>val images = remember {\n    mutableStateListOf(\n        // key to image\n        \"001\" to R.drawable.img_01,\n        \"002\" to R.drawable.img_02,\n    )\n}\n\nval state = rememberPreviewerState(\n    pageCount = { images.size },\n    getKey = { index -&gt; images[index].first } // \u83b7\u53d6key\n)\n\nimages.forEachIndexed { index, image -&gt;\n    TransformImageView(\n        imageLoader = {\n            val painter = painterResource(id = image.second)\n            // key model size\n            Triple(image.first, painter, painter.intrinsicSize)\n        }\n    )\n}\n\n// index\u8981\u4e0ekey\u7684position\u4e00\u81f4\nstate.enterTransform(index)\n</code></pre> <p>\u5728\u540c\u4e00\u4e2a\u754c\u9762\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u540c\u4e00\u4e2a<code>key</code>\u540c\u65f6\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u90e8\u4f4d\u65f6\uff0c\u6b64\u65f6\u4f7f\u7528\u5f39\u51fa\u52a8\u753b\u4f1a\u5bfc\u81f4\u52a8\u753b\u4f4d\u7f6e\u4e0d\u7b26\u5408\u9884\u671f\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a<code>ItemStateMap</code>\u7684\u65b9\u5f0f\u6765\u89e3\u51b3</p> <pre><code>val imageIds = remember { listOf(R.drawable.img_03, R.drawable.img_06) }\n\nval itemStateMap01 = remember { mutableStateMapOf&lt;Any, TransformItemState&gt;() }\nval previewerState01 = rememberPreviewerState(\n    transformItemStateMap = itemStateMap01,\n    pageCount = { imageIds.size },\n    getKey = { imageIds[it] },\n)\n\nval itemStateMap02 = remember { mutableStateMapOf&lt;Any, TransformItemState&gt;() }\nval previewerState02 = rememberPreviewerState(\n    transformItemStateMap = itemStateMap02,\n    pageCount = { imageIds.size },\n    getKey = { imageIds[it] },\n)\n\nCompositionLocalProvider(LocalTransformItemStateMap provides itemStateMap01) {\n    imageIds.forEach {\n        ImagePreviewer(\n            state = previewerState01,\n            imageLoader = {  }\n        )\n    }\n}\n\nCompositionLocalProvider(LocalTransformItemStateMap provides itemStateMap02) {\n    imageIds.forEach {\n        ImagePreviewer(\n            state = previewerState02,\n            imageLoader = {  }\n        )\n    }\n}\n</code></pre> <p>\u5982\u679c<code>TransformImageView</code>\u65e0\u6cd5\u6ee1\u8db3\u529f\u80fd\u9700\u6c42\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528<code>TransformItemView</code>\uff0c\u4f7f\u7528\u65b9\u5f0f\u89c1\u6587\u6863\uff1a<code>Previewer \u8fc7\u6e21\u52a8\u6548</code></p>"},{"location":"image_previewer/#_3","title":"\ud83e\udd6a \u7f16\u8f91\u56fe\u5c42","text":"<p>\u5728<code>ImagePreviewer</code>\u4e2d\uff0c\u8bbe\u7f6e<code>previewerLayer</code>\u6765\u7f16\u8f91<code>Previewer</code>\u7684\u56fe\u5c42\uff0c\u901a\u8fc7<code>pageDecoration</code>\u6765\u63a7\u5236\u6bcf\u4e00\u9875\u7684\u663e\u793a\uff0c \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>pageDecoration</code>\u8981\u6c42\u8fd4\u56de\u4e00\u4e2a<code>Boolean</code>\u7c7b\u578b\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528<code>pageDecoration</code>\u4f20\u5165\u7684\u53c2\u6570<code>innerPage</code>\u6765\u83b7\u5f97</p> <pre><code>ImagePreviewer(\n    state = state,\n    imageLoader = { page -&gt;\n        val painter = rememberAsyncImagePainter(model = images[page])\n        Pair(painter, painter.intrinsicSize)\n    },\n    pageDecoration = { _, innerPage -&gt;\n        var mounted = false\n        // \u5355\u72ec\u8bbe\u7f6e\u6bcf\u4e00\u9875\u7684\u80cc\u666f\u989c\u8272\n        Box(modifier = Modifier.background(Color.Cyan.copy(0.2F))) {\n            // \u901a\u8fc7\u8c03\u7528\u9875\u9762\u83b7\u53d6imageLoader\u7684\u72b6\u6001\n            mounted = innerPage()\n            // \u8bbe\u7f6e\u524d\u666f\u56fe\u5c42\n            Box(\n                modifier = Modifier\n                    .padding(bottom = 48.dp)\n                    .size(56.dp)\n                    .shadow(4.dp, CircleShape)\n                    .background(Color.White)\n                    .align(Alignment.BottomCenter),\n            ) {\n                Text(\n                    modifier = Modifier.align(Alignment.Center),\n                    fontSize = 36.sp,\n                    text = \"\u2764\ufe0f\",\n                )\n            }\n        }\n        // \u8fd9\u91cc\u9700\u8981\u8fd4\u56de\u9875\u9762\u7684\u6302\u8f7d\u60c5\u51b5\n        mounted\n    },\n    previewerLayer = TransformLayerScope(\n        previewerDecoration = { innerPreviewer -&gt;\n            // \u8bbe\u7f6eImagePreviewer\u7684\u80cc\u666f\u989c\u8272\n            Box(\n                modifier = Modifier\n                    .background(Color.Black)\n            ) {\n                innerPreviewer.invoke()\n            }\n        }\n    ),\n)\n</code></pre>"},{"location":"image_previewer/#_4","title":"\ud83c\udf2e \u7c7b\u578b\u62d3\u5c55","text":"<p><code>ImagePreviewer</code>\u53ef\u4ee5\u901a\u8fc7<code>ModelProcessor</code>\u589e\u52a0<code>model</code>\u652f\u6301\u7684\u7c7b\u578b\uff0c\u53c2\u8003\u6587\u6863\uff1a<code>ImageViewer \u7c7b\u578b\u62d3\u5c55</code></p>"},{"location":"image_previewer/#previewer","title":"\ud83c\udf2f Previewer","text":"<p><code>ImagePreviewer</code>\u662f\u57fa\u4e8e<code>Previewer</code>\u5c01\u88c5\u800c\u6765\u7684\uff0c\u5176\u53c2\u6570\u8bbe\u7f6e\u3001\u72b6\u6001\u63a7\u5236\u3001\u624b\u52bf\u56de\u8c03\u7b49\u7528\u6cd5\u4e00\u81f4\uff0c\u8be6\u60c5\u53ef\u53c2\u8003\u6587\u6863\uff1a<code>Previewer \u57fa\u672c\u914d\u7f6e</code></p>"},{"location":"image_viewer/","title":"ImageViewer","text":"<p><code>ImageViewer</code>\u662f\u4e00\u4e2a\u56fe\u7247\u653e\u5927\u7f29\u5c0f\u67e5\u770b\u7684\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u914d\u7f6e\uff0c\u7b80\u5316\u7ec4\u4ef6\u7684\u4f7f\u7528\u6d41\u7a0b</p>"},{"location":"image_viewer/#_1","title":"\ud83c\udf6d \u57fa\u672c\u4f7f\u7528","text":"<pre><code>val painter = painterResource(id = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nImageViewer(model = painter, state = state)\n</code></pre> <p>\u26a0\ufe0f \u203c\ufe0f \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u63d0\u4f9b\u56fe\u7247\u7684\u56fa\u6709\u5c3a\u5bf8\u662f\u5fc5\u987b\u7684\uff0c\u6ca1\u6709\u7684\u8bdd<code>ImageViewer</code>\u4e0d\u4f1a\u6b63\u5e38\u663e\u793a</p>"},{"location":"image_viewer/#coil","title":"\ud83c\udf70 \u7ed3\u5408Coil\u4f7f\u7528","text":"<pre><code>val painter = rememberAsyncImagePainter(model = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nImageViewer(model = painter, state = state)\n</code></pre>"},{"location":"image_viewer/#_2","title":"\ud83c\udf68 \u81ea\u5b9a\u4e49\u5185\u5bb9","text":"<p><code>ImageViewer</code>\u901a\u8fc7\u4f20\u4eba\u7684<code>model</code>\u7c7b\u578b\u6765\u81ea\u52a8\u9009\u62e9\u4f7f\u7528\u4f55\u79cd\u65b9\u5f0f\u8fdb\u884c\u56fe\u7247\u663e\u793a\uff0c\u4e0e<code>Image</code>\u7c7b\u4f3c\uff0c\u9ed8\u8ba4\u652f\u6301<code>Painter</code>\u3001<code>ImageBitmap</code>\u3001<code>ImageVector</code>\uff0c\u4e5f\u652f\u6301\u901a\u8fc7<code>AnyComposable</code>\u4f20\u5165\u4e00\u4e2a<code>Composable</code></p> <pre><code>// \u8bbe\u5b9a\u663e\u793a\u5185\u5bb9\u7684\u56fa\u6709\u5927\u5c0f\nval rectSize = 100.dp\nval density = LocalDensity.current\nval rectSizePx = density.run { rectSize.toPx() }\nval size = Size(rectSizePx, rectSizePx)\nval state = rememberZoomableState(contentSize = size)\nImageViewer(\n    state = state,\n    model = AnyComposable {\n        // \u81ea\u5b9a\u4e49\u5185\u5bb9\n        Box(\n            modifier = Modifier\n                .fillMaxSize()\n                .background(Color.Cyan)\n        ) {\n            Box(\n                modifier = Modifier\n                    .fillMaxSize(0.6F)\n                    .clip(CircleShape)\n                    .background(Color.White)\n                    .align(Alignment.BottomEnd)\n            )\n            Text(\n                modifier = Modifier.align(Alignment.Center), \n                text = \"Hello Compose\"\n            )\n        }\n    }\n)\n</code></pre> <p>\u4f46\u662f\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u91cc\u5e76\u4e0d\u63a8\u8350\u4f7f\u7528<code>AnyComposable</code>\uff0c<code>ImageViewer</code>\u662f\u5bf9<code>ZoomableView</code>\u8fdb\u884c\u5c01\u88c5\u800c\u6765\uff0c\u6709\u8f83\u9ad8\u7684\u5b9a\u5236\u5316\u9700\u6c42\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u4f7f\u7528 <code>ZoomableView</code></p> <p></p>"},{"location":"image_viewer/#_3","title":"\ud83e\uddc1 \u7c7b\u578b\u62d3\u5c55","text":"<p><code>ImageViewer</code>\u53ef\u4ee5\u901a\u8fc7<code>ModelProcessor</code>\u589e\u52a0<code>model</code>\u652f\u6301\u7684\u7c7b\u578b</p> <pre><code>val stringProcessorPair: ModelProcessorPair = String::class to { model, _ -&gt;\n    Box(\n        modifier = Modifier\n            .fillMaxSize()\n            .background(Color.LightGray)\n    ) {\n        Text(\n            modifier = Modifier.align(Alignment.Center), \n            text = model as String\n        )\n    }\n}\n</code></pre> <p>\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a\uff0c\u58f0\u660e\u4e00\u4e2a<code>ModelProcessorPair</code>\uff0c\u7c7b\u578b\u4e3a<code>Pair&lt;String,@Composable (Any, ZoomableViewState) -&gt; Unit&gt;</code>, \u5373\u4f20\u5165<code>String</code>\u7c7b\u578b\u7684<code>model</code>\u65f6\uff0c\u5c06\u6309\u6b64\u65b9\u5f0f\u8fdb\u884c\u663e\u793a</p> <pre><code>val message = \"\u597d\u5bb6\u4f19\"\nval state = rememberZoomableState(contentSize = Size(100F, 100F))\nImageViewer(\n    model = message,\n    state = state,\n    processor = ModelProcessor(stringProcessorPair)\n)\n</code></pre> <p><code>Scale</code>\u63d0\u4f9b\u4e86\u5bf9\u5927\u578b\u56fe\u7247\u4e8c\u6b21\u91c7\u6837\u7684\u652f\u6301\uff0c\u8be6\u60c5\u89c1\u6587\u6863\uff1a<code>SamplingDecoder</code></p> <pre><code>ImageViewer(\n    processor = ModelProcessor(samplingProcessorPair)\n)\n</code></pre>"},{"location":"image_viewer/#_4","title":"\ud83c\udf66 \u624b\u52bf\u4e0e\u72b6\u6001","text":"<p><code>ImageViewer</code>\u624b\u52bf\u4e8b\u4ef6\u56de\u8c03\u4e3a<code>ZoomableGestureScope</code>\uff0c\u72b6\u6001\u4e0e\u63a7\u5236\u4f7f\u7528<code>ZoomableViewState</code>\uff0c\u89c1\u6587\u6863 <code>ZoomableView ZoomableGestureScope ZoomableViewState</code></p>"},{"location":"previewer/","title":"Previewer","text":"<p><code>Scale</code>\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>Previewer</code>\u7ec4\u4ef6\uff0c\u7528\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5b9e\u73b0\u56fe\u7247\u5f39\u51fa\u9884\u89c8\u7684\u529f\u80fd\uff0c \u540c\u65f6\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u5fae\u4fe1\u670b\u53cb\u5708\u56fe\u7247\u653e\u5927\u67e5\u770b\u7684\u8fc7\u6e21\u52a8\u753b\u6548\u679c</p>"},{"location":"previewer/#_1","title":"\ud83e\uddc0 \u7b80\u5355\u4f7f\u7528","text":"<pre><code>// \u51c6\u5907\u4e00\u4e2a\u56fe\u7247\u5217\u8868\nval images = remember {\n    mutableStateListOf(\n        \"https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF\",\n        \"https://t7.baidu.com/it/u=4198287529,2774471735&amp;fm=193&amp;f=GIF\",\n    )\n}\n// \u58f0\u660e\u4e00\u4e2aPreviewerState\nval state = rememberPreviewerState(pageCount = { images.size }) { images[it] }\n// \u521b\u5efa\u4e00\u4e2aPreviewer\nPreviewer(\n    state = state,\n) { page -&gt;\n    val painter = rememberAsyncImagePainter(model = images[page])\n    ZoomablePolicy(intrinsicSize = painter.intrinsicSize) {\n        Image(\n            modifier = Modifier.fillMaxSize(),\n            painter = painter,\n            contentDescription = null\n        )\n    }\n    painter.intrinsicSize.isSpecified\n}\n\n// \u5c55\u5f00\nstate.open()\n// \u5173\u95ed\nstate.close()\n</code></pre>"},{"location":"previewer/#_2","title":"\ud83c\udf5e \u8fc7\u6e21\u52a8\u6548","text":"<p>\u8fc7\u6e21\u52a8\u6548\u4f9d\u8d56<code>TransformItemView</code>\uff0c\u9884\u89c8\u7ec4\u4ef6\u5c55\u5f00\u65f6\uff0c\u4f1a\u6309\u7167 <code>TransformItemView -&gt; Previewer</code>  \u7684\u987a\u5e8f\u8fdb\u884c<code>UI</code>\u53d8\u6362\uff0c\u8bf7\u786e\u4fdd<code>PreviewerState</code>\u4e2d\u63d0\u4f9b\u7684<code>Key</code>\u4e0e<code>TransformItemView</code>\u8bbe\u7f6e\u7684<code>Key</code>\u4e00\u81f4\uff0c \u901a\u8fc7\u8c03\u7528<code>PreviewerState.enterTransform</code>\u5c55\u5f00\uff0c<code>PreviewerState.exitTransform</code>\u5173\u95ed</p> <pre><code>val scope = rememberCoroutineScope()\nBox(modifier = Modifier.fillMaxSize()) {\n    Row(\n        modifier = Modifier.align(Alignment.Center),\n        horizontalArrangement = Arrangement.spacedBy(8.dp)\n    ) {\n        images.forEachIndexed { index, url -&gt;\n            val painter = rememberAsyncImagePainter(model = url)\n            val itemState = rememberTransformItemState(\n                intrinsicSize = painter.intrinsicSize\n            )\n            TransformItemView(\n                modifier = Modifier\n                    .size(120.dp)\n                    .clickable {\n                        scope.launch {\n                            state.enterTransform(index)\n                        }\n                    },\n                key = url,\n                transformState = state,\n                itemState = itemState,\n            ) {\n                Image(\n                    modifier = Modifier.fillMaxSize(),\n                    painter = painter,\n                    contentDescription = null,\n                    contentScale = ContentScale.Crop\n                )\n            }\n        }\n    }\n}\n</code></pre> <p>\u26a0\ufe0f\u203c\ufe0f \u6ce8\u610f<code>Key</code>\u4e0e<code>Index</code>\u7684\u4e00\u81f4\u6027</p> <pre><code>val images = remember {\n    mutableStateListOf(\n        // key to image\n        \"001\" to R.drawable.img_01,\n        \"002\" to R.drawable.img_02,\n    )\n}\n\nval state = rememberPreviewerState(\n    pageCount = { images.size },\n    getKey = { index -&gt; images[index].first } // \u83b7\u53d6key\n)\n\nimages.forEachIndexed { index, image -&gt;\n    TransformItemView(\n        key = image.first, // \u8bbe\u7f6ekey\n    )\n}\n\n// index\u8981\u4e0ekey\u7684position\u4e00\u81f4\nstate.enterTransform(index)\n</code></pre> <p>\u5728\u540c\u4e00\u4e2a\u754c\u9762\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u540c\u4e00\u4e2a<code>key</code>\u540c\u65f6\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u90e8\u4f4d\u65f6\uff0c\u6b64\u65f6\u4f7f\u7528\u5f39\u51fa\u52a8\u753b\u4f1a\u5bfc\u81f4\u52a8\u753b\u4f4d\u7f6e\u4e0d\u7b26\u5408\u9884\u671f\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a<code>ItemStateMap</code>\u7684\u65b9\u5f0f\u6765\u89e3\u51b3</p> <pre><code>val imageIds = remember { listOf(R.drawable.img_03, R.drawable.img_06) }\n\nval itemStateMap01 = remember { mutableStateMapOf&lt;Any, TransformItemState&gt;() }\nval previewerState01 = rememberPreviewerState(\n    transformItemStateMap = itemStateMap01,\n    pageCount = { imageIds.size },\n    getKey = { imageIds[it] },\n)\n\nval itemStateMap02 = remember { mutableStateMapOf&lt;Any, TransformItemState&gt;() }\nval previewerState02 = rememberPreviewerState(\n    transformItemStateMap = itemStateMap02,\n    pageCount = { imageIds.size },\n    getKey = { imageIds[it] },\n)\n\nCompositionLocalProvider(LocalTransformItemStateMap provides itemStateMap01) {\n    imageIds.forEach {\n        TransformItemView(key = it) {  }\n    }\n}\n\nCompositionLocalProvider(LocalTransformItemStateMap provides itemStateMap02) {\n    imageIds.forEach {\n        TransformItemView(key = it) {  }\n    }\n}\n</code></pre>"},{"location":"previewer/#_3","title":"\ud83e\udd6f \u7f16\u8f91\u56fe\u5c42","text":"<p>\u5728<code>Previewer</code>\u4e2d\uff0c\u8bbe\u7f6e<code>previewerLayer</code>\u6765\u7f16\u8f91<code>Previewer</code>\u7684\u56fe\u5c42\uff0c\u901a\u8fc7<code>zoomablePolicy</code>\u6765\u63a7\u5236\u6bcf\u4e00\u9875\u7684\u663e\u793a</p> <pre><code>Previewer(\n    state = state,\n    previewerLayer = TransformLayerScope(\n        previewerDecoration = {\n            // \u8bbe\u7f6e\u7ec4\u4ef6\u7684\u80cc\u666f\u56fe\u5c42\n            Box(\n                modifier = Modifier\n                    .fillMaxSize()\n                    .background(Color.Black.copy(0.2F))\n            ) {\n                // \u7ec4\u4ef6\u5185\u5bb9\u672c\u8eab\n                it.invoke()\n                // \u8bbe\u7f6e\u524d\u666f\u56fe\u5c42\n                Box(\n                    modifier = Modifier\n                        .padding(bottom = 48.dp)\n                        .size(56.dp)\n                        .shadow(4.dp, CircleShape)\n                        .background(Color.White)\n                        .align(Alignment.BottomCenter),\n                ) {\n                    Text(\n                        modifier = Modifier.align(Alignment.Center),\n                        fontSize = 36.sp,\n                        text = \"\u2764\ufe0f\",\n                    )\n                }\n            }\n        },\n    ),\n) { page -&gt;\n    val painter = rememberAsyncImagePainter(model = images[page])\n    ZoomablePolicy(intrinsicSize = painter.intrinsicSize) {\n        Image(\n            modifier = Modifier.fillMaxSize(),\n            painter = painter,\n            contentDescription = null\n        )\n    }\n    if (!painter.intrinsicSize.isSpecified) {\n        // \u52a0\u8f7d\u4e2d\n        Box(modifier = Modifier.fillMaxSize()) {\n            CircularProgressIndicator(\n                modifier = Modifier.align(Alignment.Center)\n            )\n        }\n    }\n    painter.intrinsicSize.isSpecified\n}\n</code></pre> <p></p>"},{"location":"previewer/#_4","title":"\ud83e\udd50 \u57fa\u672c\u914d\u7f6e","text":"<p>\u53ef\u4ee5\u901a\u8fc7<code>itemSpacing</code>\u8bbe\u7f6e\u6bcf\u4e00\u9875\u7684\u95f4\u9699\uff0c<code>beyondViewportPageCount</code>\u8bbe\u7f6e\u9884\u52a0\u8f7d\u7684\u9875\u6570\uff0c\u5c55\u5f00\u65f6\uff0c \u5982\u679c\u4e0d\u4f7f\u7528\u8f6c\u6362\u52a8\u6548\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u5c55\u5f00\u548c\u5173\u95ed\u52a8\u753b\uff0c\u4e0e<code>AnimatedVisibility</code>\u7684\u4f7f\u7528\u65b9\u5f0f\u4e00\u6837</p> <pre><code>Previewer(\n    itemSpacing = 20.dp, // \u8bbe\u7f6e\u9875\u9762\u7684\u95f4\u9699\n    beyondViewportPageCount = 2, // \u9664\u5f53\u524d\u9875\u9762\u5916\uff0c\u9884\u5148\u52a0\u8f7d\u5176\u4ed6\u9875\u9762\u7684\u6570\u91cf\n\n    enter = fadeIn(), // \u5c55\u5f00\u52a8\u753b\n    exit = fadeOut(), // \u5173\u95ed\u52a8\u753b\n)\n</code></pre> <p>\u5c55\u5f00\u9884\u89c8\u540e\uff0c\u5728\u7f29\u653e\u7387\u4e3a<code>1</code>\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u624b\u52bf\u64cd\u4f5c\uff0c\u4f8b\u5982\u4e0a\u4e0b\u62d6\u62fd\u5173\u95ed\u9884\u89c8</p> <pre><code>val previewerState = rememberPreviewerState(\n    verticalDragType = VerticalDragType.Down, // \u8bbe\u7f6e\u5782\u76f4\u624b\u52bf\u7c7b\u578b\n    pageCount = { images.size },\n    getKey = { images[it] }\n)\n</code></pre>"},{"location":"previewer/#_5","title":"\ud83e\udd5e \u624b\u52bf\u56de\u8c03","text":"<p>Previewer\u624b\u52bf\u76d1\u542c\u4e0eZoomablePager\u4e00\u6837\uff0c\u4f7f\u7528PagerGestureScope\uff0c\u53c2\u8003\u6587\u6863\uff1a<code>ZoomablePager PagerGestureScope</code></p>"},{"location":"previewer/#_6","title":"\ud83c\udf55 \u72b6\u6001\u63a7\u5236","text":"<p><code>PreviewerState</code>\u53ef\u4ee5\u83b7\u53d6<code>Previewer</code>\u7684\u5404\u79cd\u72b6\u6001\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6765\u63a7\u5236\u5c55\u5f00\u548c\u5173\u95ed</p> <pre><code>previewerState.open() // \u5c55\u5f00\npreviewerState.close() // \u5173\u95ed\npreviewerState.enterTransform(0) // \u5e26\u8f6c\u6362\u52a8\u753b\u5c55\u5f00\npreviewerState.exitTransform() // \u5e26\u8f6c\u6362\u52a8\u753b\u5173\u95ed\n\npreviewerState.visible // \u5f53\u524d\u7ec4\u4ef6\u662f\u5426\u53ef\u89c1\npreviewerState.visibleTarget // \u5f53\u524d\u7ec4\u4ef6\u53ef\u89c1\u72b6\u6001\u7684\u76ee\u6807\u503c\npreviewerState.animating // \u662f\u5426\u6b63\u5728\u8fdb\u884c\u52a8\u753b\npreviewerState.canOpen // \u662f\u5426\u5141\u8bb8\u5c55\u5f00\npreviewerState.canClose // \u662f\u5426\u5141\u8bb8\u5173\u95ed\n</code></pre>"},{"location":"sampling_decoder/","title":"SamplingDecoder","text":"<p><code>Scale</code>\u63d0\u4f9b\u4e86<code>SamplingDecoder</code>\u3001<code>SamplingCanvas</code>\u7528\u4e8e\u5b9e\u73b0\u8d85\u7ea7\u5927\u56fe\u7684\u9884\u89c8\uff0c<code>SamplingDecoder</code>\u5bf9<code>BitmapRegionDecoder</code>\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u6709\u52a9\u4e8e\u5f00\u53d1\u8005\u901a\u8fc7\u7b80\u5355\u7684<code>API</code>\u8c03\u7528\u5b9e\u73b0\u5927\u578b\u56fe\u7247\u7684\u52a0\u8f7d\u663e\u793a\uff0c\u907f\u514d<code>OOM</code></p> <p>\u6dfb\u52a0<code>SamplingDecoder</code>\u4f9d\u8d56\u652f\u6301\uff1a</p> <pre><code>implementation(\"com.jvziyaoyao.scale:sampling-decoder:$version\")\n</code></pre>"},{"location":"sampling_decoder/#_1","title":"\ud83c\udf4b \u7b80\u5355\u4f7f\u7528","text":"<pre><code>val context = LocalContext.current\nval inputStream = remember { context.assets.open(\"a350.jpg\") }\nval (samplingDecoder) = rememberSamplingDecoder(inputStream = inputStream)\nif (samplingDecoder != null) {\n    val state = rememberZoomableState(\n        contentSize = samplingDecoder.intrinsicSize\n    )\n    ImageViewer(\n        model = samplingDecoder,\n        state = state,\n        // \u6dfb\u52a0SamplingDecoder\u7684\u652f\u6301\n        processor = ModelProcessor(samplingProcessorPair)\n    )\n}\n</code></pre> <p><code>SamplingDecoder</code>\u652f\u6301\u5e38\u89c1\u4f4d\u56fe\uff0c\u5982\uff1a<code>JPEG</code>\u3001<code>PNG</code>\u3001<code>HEIF</code>\u7b49\uff0c<code>RAW</code>\u3001<code>GIF</code>\u8fd9\u4e9b\u5e76\u4e0d\u652f\u6301\uff0c\u5728\u4f7f\u7528<code>rememberSamplingDecoder</code>\u65b9\u6cd5\u65f6\uff0c\u683c\u5f0f\u65e0\u6cd5\u89e3\u6790\u65f6\u4f1a\u8fd4\u56de\u5f02\u5e38</p> <pre><code>// exception\u4e3a\u62a5\u9519\u4fe1\u606f\nval (samplingDecoder,exception) = \n    rememberSamplingDecoder(inputStream = inputStream)\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u81ea\u884c\u521b\u5efa\u4e00\u4e2a<code>SamplingDecoder</code>\uff0c\u4e0d\u8fc7\u5728\u7ec4\u4ef6\u9500\u6bc1\u7684\u65f6\u5019\u52a1\u5fc5\u8981\u628a<code>SamplingDecoder</code>\u79fb\u9664\uff0c\u5426\u5219\u5c06\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f</p> <pre><code>val bitmapRegionDecoder = // \u521b\u5efa\u4e00\u4e2aBitmapRegionDecoder\nval samplingDecoder = \n    createSamplingDecoder(decoder, SamplingDecoder.Rotation.ROTATION_0)\n\n// \u7ec4\u4ef6\u9000\u51fa\u7684\u65f6\u5019release\nDisposableEffect(Unit) {\n    onDispose {\n        samplingDecoder.release()\n    }\n}\n</code></pre> <p><code>SamplingDecoder</code>\u652f\u6301\u5bf9\u56fe\u7247\u8fdb\u884c\u65cb\u8f6c\u64cd\u4f5c\uff0c\u4f8b\u5982\u67d0\u4e9b\u6587\u4ef6\u4f1a\u5c06\u65cb\u8f6c\u4fe1\u606f\u5199\u5230<code>Exif</code>\u4e2d\uff0c\u8bf7\u53c2\u8003\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>val file = // \u56fe\u7247\u6587\u4ef6\nval inputStream = FileInputStream(file)\nval exifInterface = ExifInterface(file)\nval rotation = exifInterface.getDecoderRotation()\nval samplingDecoder = rememberSamplingDecoder(inputStream, rotation)\n</code></pre>"},{"location":"sampling_decoder/#zoomableview","title":"\ud83c\udf4a \u5728ZoomableView\u4e2d\u4f7f\u7528","text":"<pre><code>val state = rememberZoomableState(contentSize = samplingDecoder.intrinsicSize)\nZoomableView(state = state) {\n    SamplingCanvas(\n        samplingDecoder = samplingDecoder,\n        viewPort = state.getViewPort()\n    )\n}\n</code></pre>"},{"location":"sampling_decoder/#samplingcanvas","title":"\ud83c\udf50 \u76f4\u63a5\u4f7f\u7528SamplingCanvas","text":"<pre><code>val context = LocalContext.current\nval inputStream = remember { context.assets.open(\"a350.jpg\") }\nval (samplingDecoder) = rememberSamplingDecoder(inputStream = inputStream)\nif (samplingDecoder != null) {\n    val offset = remember { mutableStateOf(Offset.Zero) }\n    val scale = remember { mutableStateOf(1F) }\n    Box(\n        modifier = Modifier\n            .fillMaxSize()\n            .pointerInput(Unit) {\n                detectTransformGestures { _, pan, zoom, _, _ -&gt;\n                    offset.value += pan\n                    scale.value *= zoom\n                    true\n                }\n            }\n    ) {\n        val ratio = samplingDecoder.intrinsicSize.run {\n            width.div(height)\n        }\n        Box(\n            modifier = Modifier\n                .graphicsLayer {\n                    translationX = offset.value.x\n                    translationY = offset.value.y\n                    scaleX = scale.value\n                    scaleY = scale.value\n                }\n                .fillMaxWidth()\n                .aspectRatio(ratio)\n                .align(Alignment.Center)\n        ) {\n            SamplingCanvas(\n                samplingDecoder = samplingDecoder,\n                viewPort = SamplingCanvasViewPort(\n                    scale = 8F,\n                    visualRect = Rect(0.4F, 0.4F, 0.6F, 0.8F)\n                )\n            )\n        }\n    }\n}\n</code></pre>"},{"location":"zoomable_pager/","title":"ZoomablePager","text":"<p><code>ZoomablePager</code>\u57fa\u4e8e<code>ZoomableView</code>\u548c<code>Jetpack Compose Pager</code>\u5b9e\u73b0\uff0c\u63d0\u4f9b\u5bf9\u6a2a\u5411\u5217\u8868\u7c7b\u578b\u754c\u9762\u7684\u652f\u6301\uff0c\u7b80\u5316\u4e86\u624b\u52bf\u5904\u7406\u548c<code>ZoomableView</code>\u72b6\u6001\u7684\u6301\u6709</p>"},{"location":"zoomable_pager/#_1","title":"\ud83c\udf59 \u7b80\u5355\u4f7f\u7528","text":"<pre><code>// \u51c6\u5907\u4e00\u4e2a\u56fe\u7247\u5217\u8868\nval images = remember {\n    mutableStateListOf(R.drawable.light_01, R.drawable.light_02)\n}\n// \u521b\u5efa\u4e00\u4e2aPagerState\nval pagerState = rememberZoomablePagerState { images.size }\n// Pager\u7ec4\u4ef6\nZoomablePager(state = pagerState) { page -&gt;\n    val painter = painterResource(id = images[page])\n    // \u5fc5\u987b\u8981\u8c03\u7528\u7684Composable\u51fd\u6570\n    ZoomablePolicy(intrinsicSize = painter.intrinsicSize) { _ -&gt;\n        Image(\n            modifier = Modifier.fillMaxSize(),\n            painter = painter,\n            contentDescription = null\n        )\n    }\n}\n</code></pre> <p><code>ZoomablePolicy</code>\u65b9\u6cd5\u5bf9<code>ZoomableView</code>\u4ee5\u53ca<code>ZoomableViewState</code>\u8fdb\u884c\u4e86\u4e00\u5c42\u5c01\u88c5\uff0c\u4e0e<code>ZoomableView</code>\u7684\u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u5fc5\u987b\u8981\u4e3a<code>ZoomablePolicy</code>\u63d0\u4f9b\u5176\u4e2d\u5c55\u793a\u5185\u5bb9\u7684\u56fa\u6709\u5927\u5c0f\uff0c\u5e76\u4e14<code>ZoomablePolicy</code>\u7684<code>content</code>\u4e2d\u653e\u7f6e\u7684<code>Composable</code>\u9700\u8981\u8bbe\u7f6e<code>Modifier.fillMaxSize()</code></p>"},{"location":"zoomable_pager/#coil","title":"\ud83c\udf65 \u901a\u8fc7Coil\u5c55\u793a\u7f51\u7edc\u56fe\u7247","text":"<pre><code>val images = remember {\n    mutableStateListOf(\n        \"https://t7.baidu.com/it/u=1595072465,3644073269&amp;fm=193&amp;f=GIF\",\n        \"https://t7.baidu.com/it/u=4198287529,2774471735&amp;fm=193&amp;f=GIF\",\n    )\n}\nval pagerState = rememberZoomablePagerState { images.size }\nZoomablePager(state = pagerState) { page -&gt;\n    val painter = rememberAsyncImagePainter(model = images[page])\n    ZoomablePolicy(intrinsicSize = painter.intrinsicSize) { _ -&gt;\n        Image(\n            modifier = Modifier.fillMaxSize(),\n            painter = painter,\n            contentDescription = null\n        )\n    }\n    if (!painter.intrinsicSize.isSpecified) {\n        // \u672a\u52a0\u8f7d\u6210\u529f\u65f6\u53ef\u4ee5\u5148\u663e\u793a\u4e00\u4e2aloading\u5360\u4f4d\n        Box(modifier = Modifier.fillMaxSize()) {\n            CircularProgressIndicator(\n                modifier = Modifier.align(Alignment.Center)\n            )\n        }\n    }\n}\n</code></pre> <p>\u5728\u4f7f\u7528<code>Coil</code>\u7684\u8fc7\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u7279\u6b8a\u7684\u5199\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ec4\u4ef6\u4e0d\u53ef\u7528\uff1a</p> <pre><code>// \u274c \u9519\u8bef\u793a\u8303\nZoomablePager(state = pagerState) { page -&gt;\n    val painter = rememberAsyncImagePainter(model = images[page])\n    if (painter.intrinsicSize.isSpecified) {\n        // \u4ee5\u4e0b\u4ee3\u7801\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6267\u884c\n        ZoomablePolicy(intrinsicSize = painter.intrinsicSize) { _ -&gt;\n            Image(\n                modifier = Modifier.fillMaxSize(),\n                painter = painter,\n                contentDescription = null\n            )\n        }\n    }\n}\n\n// \u2b55\ufe0f \u6b63\u786e\u5199\u6cd5\nZoomablePager(state = pagerState) { page -&gt;\n    val imageRequest = ImageRequest.Builder(LocalContext.current)\n        .data(images[page])\n        .size(coil.size.Size.ORIGINAL) // \u6307\u5b9a\u83b7\u53d6\u56fe\u7247\u7684\u5927\u5c0f\n        .build()\n    val painter = rememberAsyncImagePainter(imageRequest)\n    if (painter.intrinsicSize.isSpecified) {\n        ZoomablePolicy(intrinsicSize = painter.intrinsicSize) { _ -&gt;\n            Image(\n                modifier = Modifier.fillMaxSize(),\n                painter = painter,\n                contentDescription = null\n            )\n        }\n    }\n}\n</code></pre>"},{"location":"zoomable_pager/#_2","title":"\ud83c\udf58 \u5bf9\u9875\u9762\u81ea\u5b9a\u4e49","text":"<pre><code>ZoomablePager(state = pagerState) { page -&gt;\n    val painter = painterResource(id = images[page])\n    // \u8bbe\u7f6e\u80cc\u666f\u8272\u5947\u5076\u9875\u4e0d\u540c\n    val backgroundColor = if (page % 2 == 0) Color.Cyan else Color.Gray\n    Box(\n        modifier = Modifier\n            .fillMaxSize()\n            .background(backgroundColor.copy(0.2F))\n    ) {\n        ZoomablePolicy(intrinsicSize = painter.intrinsicSize) { _ -&gt;\n            Image(\n                modifier = Modifier.fillMaxSize(),\n                painter = painter,\n                contentDescription = null\n            )\n        }\n        // \u8bbe\u7f6e\u6bcf\u4e00\u9875\u7684\u524d\u666f\u56fe\u5c42\n        Box(\n            modifier = Modifier\n                .padding(bottom = 20.dp)\n                .clip(RoundedCornerShape(8.dp))\n                .background(Color.LightGray)\n                .padding(8.dp)\n                .align(Alignment.BottomCenter),\n        ) {\n            Text(text = \"${page + 1}/${images.size}\")\n        }\n    }\n}\n</code></pre> <p>\u4e0e<code>Pager</code>\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7<code>itemSpacing</code>\u8bbe\u7f6e\u6bcf\u4e00\u9875\u7684\u95f4\u9699\uff0c<code>beyondViewportPageCount</code>\u8bbe\u7f6e\u9884\u52a0\u8f7d\u7684\u9875\u6570\uff0c<code>userScrollEnabled</code>\u8bbe\u7f6e\u662f\u5426\u5141\u8bb8\u7528\u6237\u6eda\u52a8\u9875\u9762\uff1a</p> <pre><code>ZoomablePager(\n    itemSpacing = 20.dp, // \u8bbe\u7f6e\u9875\u9762\u7684\u95f4\u9699\n    beyondViewportPageCount = 2, // \u9664\u5f53\u524d\u9875\u9762\u5916\uff0c\u9884\u5148\u52a0\u8f7d\u5176\u4ed6\u9875\u9762\u7684\u6570\u91cf\n    userScrollEnabled = true, // \u5141\u8bb8\u7528\u6237\u6eda\u52a8\u9875\u9762\n) {  }\n</code></pre> <p><code>ZoomablePager</code>\u901a\u8fc7<code>PagerGestureScope</code>\u83b7\u53d6\u624b\u52bf\u4e8b\u4ef6\u7684\u56de\u8c03\uff0c\u4e0e<code>ZoomableView</code>\u7c7b\u4f3c\uff0c\u76ee\u524d\u4ec5\u652f\u6301<code>onTap</code>\u3001<code>onDoubleTap</code>\u3001<code>onLongPress</code></p> <p></p>"},{"location":"zoomable_pager/#pagergesturescope","title":"\ud83c\udf63 PagerGestureScope","text":"<pre><code>ZoomablePager(\n    state = pagerState,\n    detectGesture = PagerGestureScope(\n        onTap = {\n            // \u70b9\u51fb\u4e8b\u4ef6\n        },\n        onDoubleTap = {\n            // \u53cc\u51fb\u4e8b\u4ef6\n            // \u5982\u679c\u8fd4\u56defalse\uff0c\u4f1a\u6267\u884c\u9ed8\u8ba4\u64cd\u4f5c\uff0c\u628a\u5f53\u524d\u9875\u9762\u653e\u5927\u5230\u6700\u5927\n            // \u5982\u679c\u8fd4\u56detrue\uff0c\u5219\u4e0d\u4f1a\u6709\u4efb\u4f55\u64cd\u4f5c\n            return@PagerGestureScope false\n        },\n        onLongPress = {\n            // \u957f\u6309\u4e8b\u4ef6\n        }\n    )\n) { }\n</code></pre>"},{"location":"zoomable_pager/#zoomablepagerstate","title":"\ud83c\udf64 ZoomablePagerState","text":"<p><code>ZoomablePagerState</code>\u53ef\u4ee5\u83b7\u53d6<code>ZoomablePager</code>\u7684\u5404\u79cd\u72b6\u6001\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6765\u5207\u6362\u5f53\u524d\u9875\u9762\uff1a</p> <pre><code>val pagerState = rememberZoomablePagerState { images.size }\n// \u83b7\u53d6\u5f53\u524d\u9875\u9762\u7684\u9875\u7801\npagerState.currentPage \n// \u52a8\u753b\u6eda\u52a8\u5230\u4e0b\u4e00\u4e2a\u9875\u9762\npagerState.animateScrollToPage(1)\n// \u6eda\u52a8\u5230\u4e0b\u4e00\u4e2a\u9875\u9762\npagerState.scrollToPage(1)\n</code></pre>"},{"location":"zoomable_view/","title":"ZoomableView","text":"<p><code>ZoomableView</code>\u662f\u8fd9\u4e2a\u5e93\u6700\u57fa\u672c\u7684\u7ec4\u4ef6\uff0c\u901a\u8fc7<code>ZoomableView</code>\u53ef\u4ee5\u5bf9\u4efb\u610f<code>Composable</code>\u8fdb\u884c\u653e\u5927\u3001\u7f29\u5c0f\u7b49\u64cd\u4f5c</p>"},{"location":"zoomable_view/#_1","title":"\ud83e\udd51 \u7b80\u5355\u4f7f\u7528","text":"<pre><code>val painter = painterResource(id = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nZoomableView(state = state) {\n    Image(\n        modifier = Modifier.fillMaxSize(), // \u8fd9\u91cc\u8bf7\u52a1\u5fc5\u8981\u5145\u6ee1\u6574\u4e2a\u56fe\u5c42\n        painter = painter,\n        contentDescription = null,\n    )\n}\n</code></pre> <p>\u5728\u4f7f\u7528<code>ZoomableView</code>\u65f6\uff0c\u5fc5\u987b\u4e3a\u7ec4\u4ef6\u63d0\u4f9b\u4e00\u4e2a<code>ZoomableViewState</code>\uff0c\u5e76\u4e14\u544a\u77e5\u7ec4\u4ef6\u9700\u8981\u663e\u793a\u7684\u5185\u5bb9\u7684\u56fa\u6709\u5927\u5c0f\uff0c\u5426\u5219\u7ec4\u4ef6\u4e0d\u4f1a\u6b63\u5e38\u663e\u793a</p>"},{"location":"zoomable_view/#coil","title":"\ud83c\udf51 \u7ed3\u5408Coil\u4f7f\u7528","text":"<pre><code>val painter = rememberAsyncImagePainter(model = R.drawable.light_02)\nval state = rememberZoomableState(contentSize = painter.intrinsicSize)\nZoomableView(state = state) {\n    Image(\n        modifier = Modifier.fillMaxSize(),\n        painter = painter,\n        contentDescription = null,\n    )\n}\n</code></pre> <p><code>ZoomableView</code>\u4f1a\u6839\u636e<code>ZoomableViewState</code>\u4e2d\u83b7\u5f97\u7684\u5c3a\u5bf8\u5927\u5c0f\uff0c\u5c06\u5185\u5bb9\u7f29\u653e\u5230\u521a\u597d\u80fd\u591f\u5b8c\u5168\u663e\u793a\uff0c\u5728<code>ZoomableView</code>\u7684<code>content</code>\u4e2d\u653e\u7f6e\u5185\u5bb9\u65f6\u9700\u8981\u4e3a<code>Composable</code>\u8bbe\u7f6e<code>Modifier.fillMaxSize()</code>,\u5426\u5219\u4f1a\u5bfc\u81f4\u663e\u793a\u51fa\u95ee\u9898</p>"},{"location":"zoomable_view/#composable","title":"\ud83c\udf49 \u5c55\u793a\u4e00\u4e2aComposable","text":"<pre><code>val density = LocalDensity.current\nval rectSize = 100.dp\nval rectSizePx = density.run { rectSize.toPx() }\nval size = Size(rectSizePx, rectSizePx)\nval state = rememberZoomableState(contentSize = size)\nZoomableView(state = state) {\n    Box(\n        modifier = Modifier\n            .fillMaxSize()\n            .background(Color.Cyan)\n    ) {\n        Box(\n            modifier = Modifier\n                .fillMaxSize(0.6F)\n                .clip(CircleShape)\n                .background(Color.White)\n                .align(Alignment.BottomEnd)\n        )\n        Text(\n            modifier = Modifier.align(Alignment.Center), \n            text = \"Hello Compose\"\n        )\n    }\n}\n</code></pre> <p>\u9700\u8981\u4ece<code>ZoomableView</code>\u83b7\u53d6\u624b\u52bf\u4e8b\u4ef6\u7684\u56de\u8c03\uff0c\u53ef\u4ee5\u4f7f\u7528<code>ZoomableGestureScope</code>\uff0c\u76ee\u524d\u4ec5\u652f\u6301<code>onTap</code>\u3001<code>onDoubleTap</code>\u3001<code>onLongPress</code></p> <p></p>"},{"location":"zoomable_view/#zoomablegesturescope","title":"\ud83e\udd65 ZoomableGestureScope","text":"<pre><code>ZoomableView(\n    state = rememberZoomableState(),\n    detectGesture = ZoomableGestureScope(\n        // \u70b9\u51fb\u4e8b\u4ef6\n        onTap = { offset -&gt;\n\n        },\n        // \u53cc\u51fb\u4e8b\u4ef6\n        onDoubleTap = { offset -&gt;\n\n        },\n        // \u957f\u6309\u4e8b\u4ef6\n        onLongPress = { offset -&gt;\n\n        }\n    )\n) {  }\n</code></pre>"},{"location":"zoomable_view/#zoomableviewstate","title":"\ud83e\udd6d ZoomableViewState","text":"<p>\u5728<code>ZoomableView</code>\u4e2d\u5c55\u793a\u7684\u5185\u5bb9\u6709\u4e00\u4e2a\u6700\u5927\u7f29\u653e\u7387\uff0c\u53ef\u4ee5\u901a\u8fc7<code>maxScale</code>\u6765\u8bbe\u7f6e\uff0c\u8fdb\u884c\u653e\u5927\u3001\u7f29\u5c0f\u8d85\u8fc7\u6781\u503c\u65f6\u4f1a\u6709\u4e00\u4e2a\u6062\u590d\u7684\u8fc7\u7a0b\u52a8\u753b\uff0c\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a<code>animationSpec</code>\u6765\u4fee\u6539\u8fd9\u4e2a\u52a8\u753b\u7684\u89c4\u683c</p> <pre><code>// \u83b7\u53d6\u4e00\u5f20\u56fe\u7247\nval painter = painterResource(id = R.drawable.light_02)\n// \u521b\u5efa\u4e00\u4e2aZoomableViewState\nval state = rememberZoomableState(\n    contentSize = painter.intrinsicSize,\n    // \u8bbe\u7f6e\u7ec4\u4ef6\u6700\u5927\u7f29\u653e\u7387\n    maxScale = 4F,\n    // \u8bbe\u7f6e\u7ec4\u4ef6\u8fdb\u884c\u52a8\u753b\u65f6\u7684\u52a8\u753b\u89c4\u683c\n    animationSpec = tween(1200)\n)\n</code></pre> <p>\u901a\u8fc7<code>ZoomableViewState</code>\u53ef\u4ee5\u83b7\u53d6<code>ZoomableView</code>\u7684\u5404\u79cd\u72b6\u6001\u53c2\u6570\uff1a</p> <pre><code>state.isRunning() // \u83b7\u53d6\u7ec4\u4ef6\u662f\u5426\u5728\u52a8\u753b\u72b6\u6001\nstate.displaySize // \u83b7\u53d6\u7ec4\u4ef61\u500d\u663e\u793a\u7684\u5927\u5c0f\nstate.scale // \u83b7\u53d6\u7ec4\u4ef6\u5f53\u524d\u76f8\u5bf9\u4e8e1\u500d\u663e\u793a\u5927\u5c0f\u7684\u7f29\u653e\u7387\nstate.offsetX // \u83b7\u53d6\u7ec4\u4ef6\u7684X\u8f74\u4f4d\u79fb\nstate.offsetY // \u83b7\u53d6\u7ec4\u4ef6\u7684Y\u8f74\u4f4d\u79fb\nstate.rotation // \u83b7\u53d6\u7ec4\u4ef6\u65cb\u8f6c\u89d2\u5ea6\n</code></pre> <p>\u901a\u8fc7<code>ZoomableViewState</code>\u63a7\u5236<code>ZoomableView</code>\u7684\u7f29\u653e\u7387\u5728\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u95f4\u5207\u6362\uff1a</p> <pre><code>val scope = rememberCoroutineScope()\nZoomableView(\n    state = state,\n    detectGesture = ZoomableGestureScope(\n        onDoubleTap = { offset -&gt;\n            scope.launch {\n                // \u5728\u6700\u5927\u548c\u6700\u5c0f\u663e\u793a\u500d\u7387\u95f4\u5207\u6362\uff0c\u5982\u679c\u5f53\u524d\u7f29\u653e\u7387\u5373\u4e0d\u662f\u6700\u5927\u503c\uff0c\n                // \u4e5f\u4e0d\u662f\u6700\u5c0f\u503c\uff0c\u4f1a\u6062\u590d\u5230\u9ed8\u8ba4\u663e\u793a\u5927\u5c0f\n                state.toggleScale(offset)\n            }\n        },\n        onLongPress = { _ -&gt;\n            // \u6062\u590d\u5230\u9ed8\u8ba4\u663e\u793a\u5927\u5c0f\n            scope.launch { state.reset() }\n        }\n    )\n) {\n    Image(\n        modifier = Modifier.fillMaxSize(),\n        painter = painter,\n        contentDescription = null,\n    )\n}\n</code></pre>"}]}